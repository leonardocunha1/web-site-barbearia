/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * API Barber Shop
 * API para agendamento de servi√ßos de barbearia
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * Cria√ß√£o de um novo agendamento.
 */
export const createBookingBodyNotesMax = 500;
export const createBookingBodyUseBonusPointsDefault = false;export const createBookingBodyCouponCodeMax = 50;


export const createBookingBody = zod.object({
  "professionalId": zod.string().uuid(),
  "services": zod.array(zod.object({
  "serviceId": zod.string().uuid()
})),
  "startDateTime": zod.string().datetime({}),
  "notes": zod.string().max(createBookingBodyNotesMax).optional(),
  "useBonusPoints": zod.boolean().optional(),
  "couponCode": zod.string().max(createBookingBodyCouponCodeMax).optional()
})

/**
 * Atualiza o status de um agendamento (apenas para profissionais)
 */
export const updateBookingStatusParams = zod.object({
  "bookingId": zod.string().uuid()
})

export const updateBookingStatusBodyReasonMax = 255;


export const updateBookingStatusBody = zod.object({
  "status": zod.enum(['PENDENTE', 'CONFIRMADO', 'CANCELADO', 'CONCLUIDO']),
  "reason": zod.string().max(updateBookingStatusBodyReasonMax).optional()
})

export const updateBookingStatusResponse = zod.object({
  "message": zod.string()
})

/**
 * Lista os agendamentos do usu√°rio autenticado
 */
export const listUserBookingsQueryPageDefault = 1;
export const listUserBookingsQueryPageMin = 0;
export const listUserBookingsQueryLimitDefault = 10;
export const listUserBookingsQueryLimitMin = 0;

export const listUserBookingsQueryLimitMax = 100;


export const listUserBookingsQueryParams = zod.object({
  "page": zod.number().min(listUserBookingsQueryPageMin).default(listUserBookingsQueryPageDefault),
  "limit": zod.number().min(listUserBookingsQueryLimitMin).max(listUserBookingsQueryLimitMax).default(listUserBookingsQueryLimitDefault),
  "startDate": zod.string().datetime({}).optional(),
  "endDate": zod.string().datetime({}).optional(),
  "status": zod.enum(['PENDENTE', 'CONFIRMADO', 'CANCELADO', 'CONCLUIDO']).optional(),
  "sort": zod.array(zod.object({
  "field": zod.enum(['dataHoraInicio', 'profissional', 'status', 'valorFinal']),
  "order": zod.enum(['asc', 'desc'])
})).optional()
})

export const listUserBookingsResponseBookingsItemValorFinalMin = 0;
export const listUserBookingsResponseBookingsItemItemsItemDuracaoMin = 0;
export const listUserBookingsResponseBookingsItemItemsItemPrecoMin = 0;


export const listUserBookingsResponse = zod.object({
  "bookings": zod.array(zod.object({
  "id": zod.string().uuid(),
  "usuarioId": zod.string().uuid(),
  "dataHoraInicio": zod.string().datetime({}),
  "dataHoraFim": zod.string().datetime({}),
  "status": zod.enum(['PENDENTE', 'CONFIRMADO', 'CANCELADO', 'CONCLUIDO']),
  "observacoes": zod.string().nullish(),
  "valorFinal": zod.number().min(listUserBookingsResponseBookingsItemValorFinalMin).nullish(),
  "canceledAt": zod.string().datetime({}).nullish(),
  "confirmedAt": zod.string().datetime({}).nullish(),
  "updatedAt": zod.string().datetime({}),
  "createdAt": zod.string().datetime({}),
  "profissional": zod.object({
  "id": zod.string().uuid(),
  "user": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
})
}),
  "user": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
}),
  "items": zod.array(zod.object({
  "id": zod.string().uuid(),
  "duracao": zod.number().min(listUserBookingsResponseBookingsItemItemsItemDuracaoMin),
  "preco": zod.number().min(listUserBookingsResponseBookingsItemItemsItemPrecoMin),
  "serviceProfessional": zod.object({
  "id": zod.string().uuid(),
  "service": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
})
})
}))
})),
  "total": zod.number(),
  "page": zod.number(),
  "limit": zod.number(),
  "totalPages": zod.number()
})

/**
 * Lista os agendamentos do profissional autenticado
 */
export const listProfessionalBookingsQueryPageDefault = 1;
export const listProfessionalBookingsQueryPageMin = 0;
export const listProfessionalBookingsQueryLimitDefault = 10;
export const listProfessionalBookingsQueryLimitMin = 0;

export const listProfessionalBookingsQueryLimitMax = 100;


export const listProfessionalBookingsQueryParams = zod.object({
  "page": zod.number().min(listProfessionalBookingsQueryPageMin).default(listProfessionalBookingsQueryPageDefault),
  "limit": zod.number().min(listProfessionalBookingsQueryLimitMin).max(listProfessionalBookingsQueryLimitMax).default(listProfessionalBookingsQueryLimitDefault),
  "startDate": zod.string().datetime({}).optional(),
  "endDate": zod.string().datetime({}).optional(),
  "status": zod.enum(['PENDENTE', 'CONFIRMADO', 'CANCELADO', 'CONCLUIDO']).optional(),
  "sort": zod.array(zod.object({
  "field": zod.enum(['dataHoraInicio', 'profissional', 'status', 'valorFinal']),
  "order": zod.enum(['asc', 'desc'])
})).optional()
})

export const listProfessionalBookingsResponseBookingsItemValorFinalMin = 0;
export const listProfessionalBookingsResponseBookingsItemItemsItemDuracaoMin = 0;
export const listProfessionalBookingsResponseBookingsItemItemsItemPrecoMin = 0;


export const listProfessionalBookingsResponse = zod.object({
  "bookings": zod.array(zod.object({
  "id": zod.string().uuid(),
  "usuarioId": zod.string().uuid(),
  "dataHoraInicio": zod.string().datetime({}),
  "dataHoraFim": zod.string().datetime({}),
  "status": zod.enum(['PENDENTE', 'CONFIRMADO', 'CANCELADO', 'CONCLUIDO']),
  "observacoes": zod.string().nullish(),
  "valorFinal": zod.number().min(listProfessionalBookingsResponseBookingsItemValorFinalMin).nullish(),
  "canceledAt": zod.string().datetime({}).nullish(),
  "confirmedAt": zod.string().datetime({}).nullish(),
  "updatedAt": zod.string().datetime({}),
  "createdAt": zod.string().datetime({}),
  "profissional": zod.object({
  "id": zod.string().uuid(),
  "user": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
})
}),
  "user": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
}),
  "items": zod.array(zod.object({
  "id": zod.string().uuid(),
  "duracao": zod.number().min(listProfessionalBookingsResponseBookingsItemItemsItemDuracaoMin),
  "preco": zod.number().min(listProfessionalBookingsResponseBookingsItemItemsItemPrecoMin),
  "serviceProfessional": zod.object({
  "id": zod.string().uuid(),
  "service": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
})
})
}))
})),
  "total": zod.number(),
  "page": zod.number(),
  "limit": zod.number(),
  "totalPages": zod.number()
})

/**
 * Busca os detalhes de um agendamento pelo ID.
 */
export const getBookingByIdParams = zod.object({
  "bookingId": zod.string().uuid()
})

export const getBookingByIdResponseBookingValorFinalMin = 0;
export const getBookingByIdResponseBookingItemsItemDuracaoMin = 0;
export const getBookingByIdResponseBookingItemsItemPrecoMin = 0;


export const getBookingByIdResponse = zod.object({
  "booking": zod.object({
  "id": zod.string().uuid(),
  "usuarioId": zod.string().uuid(),
  "dataHoraInicio": zod.string().datetime({}),
  "dataHoraFim": zod.string().datetime({}),
  "status": zod.enum(['PENDENTE', 'CONFIRMADO', 'CANCELADO', 'CONCLUIDO']),
  "observacoes": zod.string().nullish(),
  "valorFinal": zod.number().min(getBookingByIdResponseBookingValorFinalMin).nullish(),
  "canceledAt": zod.string().datetime({}).nullish(),
  "confirmedAt": zod.string().datetime({}).nullish(),
  "updatedAt": zod.string().datetime({}),
  "createdAt": zod.string().datetime({}),
  "profissional": zod.object({
  "id": zod.string().uuid(),
  "user": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
})
}),
  "user": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
}),
  "items": zod.array(zod.object({
  "id": zod.string().uuid(),
  "duracao": zod.number().min(getBookingByIdResponseBookingItemsItemDuracaoMin),
  "preco": zod.number().min(getBookingByIdResponseBookingItemsItemPrecoMin),
  "serviceProfessional": zod.object({
  "id": zod.string().uuid(),
  "service": zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string()
})
})
}))
})
})

