/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * API Barber Shop
 * API para agendamento de servi√ßos de barbearia
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


export const addServiceToProfessionalParams = zod.object({
  "professionalId": zod.string().uuid()
})

export const addServiceToProfessionalBodyPrecoMin = 0;
export const addServiceToProfessionalBodyDuracaoMin = 0;


export const addServiceToProfessionalBody = zod.object({
  "serviceId": zod.string().uuid(),
  "preco": zod.number().min(addServiceToProfessionalBodyPrecoMin),
  "duracao": zod.number().min(addServiceToProfessionalBodyDuracaoMin)
})

export const listProfessionalServicesParams = zod.object({
  "professionalId": zod.string().uuid()
})

export const listProfessionalServicesQueryPageDefault = 1;
export const listProfessionalServicesQueryPageMin = 0;
export const listProfessionalServicesQueryLimitDefault = 10;
export const listProfessionalServicesQueryLimitMin = 0;

export const listProfessionalServicesQueryLimitMax = 100;
export const listProfessionalServicesQueryActiveOnlyDefault = true;

export const listProfessionalServicesQueryParams = zod.object({
  "page": zod.number().min(listProfessionalServicesQueryPageMin).default(listProfessionalServicesQueryPageDefault),
  "limit": zod.number().min(listProfessionalServicesQueryLimitMin).max(listProfessionalServicesQueryLimitMax).default(listProfessionalServicesQueryLimitDefault),
  "activeOnly": zod.boolean().default(listProfessionalServicesQueryActiveOnlyDefault)
})

export const listProfessionalServicesResponse = zod.object({
  "services": zod.array(zod.object({
  "id": zod.string().uuid(),
  "nome": zod.string(),
  "descricao": zod.string().optional(),
  "categoria": zod.string().optional(),
  "ativo": zod.boolean(),
  "createdAt": zod.string().datetime({}),
  "updatedAt": zod.string().datetime({})
})),
  "pagination": zod.object({
  "page": zod.number(),
  "limit": zod.number(),
  "totalPages": zod.number(),
  "total": zod.number()
})
})

export const removeServiceFromProfessionalParams = zod.object({
  "serviceId": zod.string().uuid(),
  "professionalId": zod.string().uuid()
})

export const updateServiceProfessionalParams = zod.object({
  "serviceId": zod.string().uuid(),
  "professionalId": zod.string().uuid()
})

export const updateServiceProfessionalBodyPrecoMin = 0;
export const updateServiceProfessionalBodyDuracaoMin = 0;


export const updateServiceProfessionalBody = zod.object({
  "preco": zod.number().min(updateServiceProfessionalBodyPrecoMin),
  "duracao": zod.number().min(updateServiceProfessionalBodyDuracaoMin)
})

